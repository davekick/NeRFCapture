/****************************************************************

  Generated by Eclipse Cyclone DDS IDL to C Translator
  File name: NeRFCaptureData.h
  Source: /Users/Jad/repos/jc211/NeRFCapture/NeRFCapture/DDSModel/NeRFCaptureData.idl
  Cyclone DDS: V0.11.0

*****************************************************************/
#ifndef DDSC_NERFCAPTUREDATA_H
#define DDSC_NERFCAPTUREDATA_H

#include "dds/ddsc/dds_public_impl.h"

#ifdef __cplusplus
extern "C" {
#endif

typedef enum NeRFCaptureData_ImageFormat
{
  NeRFCaptureData_RGB,
  NeRFCaptureData_YUV
} NeRFCaptureData_ImageFormat;

#define NeRFCaptureData_ImageFormat__alloc() \
((NeRFCaptureData_ImageFormat*) dds_alloc (sizeof (NeRFCaptureData_ImageFormat)));

#ifndef DDS_SEQUENCE_OCTET_DEFINED
#define DDS_SEQUENCE_OCTET_DEFINED
typedef struct dds_sequence_octet
{
  uint32_t _maximum;
  uint32_t _length;
  uint8_t *_buffer;
  bool _release;
} dds_sequence_octet;

#define dds_sequence_octet__alloc() \
((dds_sequence_octet*) dds_alloc (sizeof (dds_sequence_octet)));

#define dds_sequence_octet_allocbuf(l) \
((uint8_t *) dds_alloc ((l) * sizeof (uint8_t)))
#endif /* DDS_SEQUENCE_OCTET_DEFINED */

#ifndef DDS_SEQUENCE_OCTET_DEFINED
#define DDS_SEQUENCE_OCTET_DEFINED
typedef struct dds_sequence_octet
{
  uint32_t _maximum;
  uint32_t _length;
  uint8_t *_buffer;
  bool _release;
} dds_sequence_octet;

#define dds_sequence_octet__alloc() \
((dds_sequence_octet*) dds_alloc (sizeof (dds_sequence_octet)));

#define dds_sequence_octet_allocbuf(l) \
((uint8_t *) dds_alloc ((l) * sizeof (uint8_t)))
#endif /* DDS_SEQUENCE_OCTET_DEFINED */

typedef struct NeRFCaptureData_NeRFCaptureFrame
{
  uint32_t id;
  double timestamp;
  float fl_x;
  float fl_y;
  float cx;
  float cy;
  float transform_matrix[16];
  uint32_t width;
  uint32_t height;
  NeRFCaptureData_ImageFormat format;
  dds_sequence_octet image;
  bool has_depth;
  uint32_t depth_width;
  uint32_t depth_height;
  float depth_scale;
  dds_sequence_octet depth_image;
} NeRFCaptureData_NeRFCaptureFrame;

extern const dds_topic_descriptor_t NeRFCaptureData_NeRFCaptureFrame_desc;

#define NeRFCaptureData_NeRFCaptureFrame__alloc() \
((NeRFCaptureData_NeRFCaptureFrame*) dds_alloc (sizeof (NeRFCaptureData_NeRFCaptureFrame)));

#define NeRFCaptureData_NeRFCaptureFrame_free(d,o) \
dds_sample_free ((d), &NeRFCaptureData_NeRFCaptureFrame_desc, (o))

typedef struct NeRFCaptureData_Pose
{
  uint32_t id;
  double timestamp;
  float fl_x;
  float fl_y;
  float cx;
  float cy;
  float transform_matrix[16];
} NeRFCaptureData_Pose;

extern const dds_topic_descriptor_t NeRFCaptureData_Pose_desc;

#define NeRFCaptureData_Pose__alloc() \
((NeRFCaptureData_Pose*) dds_alloc (sizeof (NeRFCaptureData_Pose)));

#define NeRFCaptureData_Pose_free(d,o) \
dds_sample_free ((d), &NeRFCaptureData_Pose_desc, (o))

typedef enum VideoMessages_EncodingType
{
  VideoMessages_H264,
  VideoMessages_HEVC
} VideoMessages_EncodingType;

#define VideoMessages_EncodingType__alloc() \
((VideoMessages_EncodingType*) dds_alloc (sizeof (VideoMessages_EncodingType)));

typedef struct VideoMessages_Extrinsics
{
  float transform_matrix[16];
} VideoMessages_Extrinsics;

extern const dds_topic_descriptor_t VideoMessages_Extrinsics_desc;

#define VideoMessages_Extrinsics__alloc() \
((VideoMessages_Extrinsics*) dds_alloc (sizeof (VideoMessages_Extrinsics)));

#define VideoMessages_Extrinsics_free(d,o) \
dds_sample_free ((d), &VideoMessages_Extrinsics_desc, (o))

typedef struct VideoMessages_Intrinsics
{
  float fl_x;
  float fl_y;
  float cx;
  float cy;
} VideoMessages_Intrinsics;

extern const dds_topic_descriptor_t VideoMessages_Intrinsics_desc;

#define VideoMessages_Intrinsics__alloc() \
((VideoMessages_Intrinsics*) dds_alloc (sizeof (VideoMessages_Intrinsics)));

#define VideoMessages_Intrinsics_free(d,o) \
dds_sample_free ((d), &VideoMessages_Intrinsics_desc, (o))

#ifndef DDS_SEQUENCE_OCTET_DEFINED
#define DDS_SEQUENCE_OCTET_DEFINED
typedef struct dds_sequence_octet
{
  uint32_t _maximum;
  uint32_t _length;
  uint8_t *_buffer;
  bool _release;
} dds_sequence_octet;

#define dds_sequence_octet__alloc() \
((dds_sequence_octet*) dds_alloc (sizeof (dds_sequence_octet)));

#define dds_sequence_octet_allocbuf(l) \
((uint8_t *) dds_alloc ((l) * sizeof (uint8_t)))
#endif /* DDS_SEQUENCE_OCTET_DEFINED */

typedef struct VideoMessages_PosedVideoFrame
{
  uint32_t stream_id;
  bool is_keyframe;
  double timestamp;
  dds_sequence_octet nalus;
  float transform_matrix[16];
  float fl_x;
  float fl_y;
  float cx;
  float cy;
  uint32_t width;
  uint32_t height;
} VideoMessages_PosedVideoFrame;

extern const dds_topic_descriptor_t VideoMessages_PosedVideoFrame_desc;

#define VideoMessages_PosedVideoFrame__alloc() \
((VideoMessages_PosedVideoFrame*) dds_alloc (sizeof (VideoMessages_PosedVideoFrame)));

#define VideoMessages_PosedVideoFrame_free(d,o) \
dds_sample_free ((d), &VideoMessages_PosedVideoFrame_desc, (o))

#ifdef __cplusplus
}
#endif

#endif /* DDSC_NERFCAPTUREDATA_H */
